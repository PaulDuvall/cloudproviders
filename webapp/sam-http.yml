AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  A sample Lambda Safe Deployment Application.
  https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/automating-updates-to-serverless-apps.html
Resources:
  mySNSTopic:
    Type: 'AWS::SNS::Topic'
  safeTest:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index-get.handler
      CodeUri: src/
      Runtime: nodejs12.x
      AutoPublishAlias: live
      DeploymentPreference:
        Type: CodeDeployDefault.LambdaCanary10Percent5Minutes
        Hooks:
          PreTraffic:
            Ref: preTrafficHook
        TriggerConfigurations:
          - TriggerEvents:
              - DeploymentSuccess
              - DeploymentFailure
            TriggerName: TestTrigger
            TriggerTargetArn:
              Ref: mySNSTopic
      MemorySize: 128
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Ref: MyDynamoDBTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MyDynamoDBTable
      Events:
        SimpleCase:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: MyApi
            Method: GET
            Path: /clouds
            TimeoutInMillis: 15000
      Description: ''
  MyDynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    DeletionPolicy: Delete
    Properties:
      TableName: CloudProviders
      AttributeDefinitions:
        - AttributeName: ServiceName
          AttributeType: S
        - AttributeName: id
          AttributeType: 'N'
      KeySchema:
        - AttributeName: ServiceName
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  MyApi:
    Type: 'AWS::Serverless::HttpApi'
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - '*'
  preTrafficHook:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: preTrafficHook.handler
      CodeUri: src/
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'codedeploy:PutLifecycleEventHookExecutionStatus'
              Resource:
                'Fn::Sub': >-
                  arn:${AWS::Partition}:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'lambda:InvokeFunction'
              Resource:
                'Fn::GetAtt':
                  - safeTest
                  - Arn
      Runtime: nodejs12.x
      FunctionName: CodeDeployHook_preTrafficHook
      DeploymentPreference:
        Enabled: false
      Environment:
        Variables:
          CurrentVersion:
            Ref: safeTest.Version
Outputs:
  GetDataApi:
    Description: API Gateway endpoint URL for Data Listing Function
    Value:
      'Fn::Sub': 'https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/clouds'
  LambdaFunctionUrl:
    Description: URL for Lambda Get Function
    Value:
      'Fn::Sub': 'https://console.aws.amazon.com/lambda/home?region=${AWS::Region}#/functions/${safeTest}/aliases/live?tab=configuration'
  CodeDeployUrl:
    Description: URL for CodeDeploy Deployments
    Value:
      'Fn::Sub': 'https://console.aws.amazon.com/codesuite/codedeploy/deployments?region=${AWS::Region}'
  DynamoDBUrl:
    Description: URL for DynamoDB CloudProviders table
    Value:
      'Fn::Sub': 'https://console.aws.amazon.com/dynamodb/home?region=${AWS::Region}#tables:selected=${MyDynamoDBTable};tab=items'